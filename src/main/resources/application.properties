spring.application.name=Jwt-Authentication
# -------------------------
# Server
# -------------------------
server.port=8085

# -------------------------
## H2 (development convenience)
## -------------------------
#spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

## -------------------------
## JPA / Hibernate
## -------------------------
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

spring.data.redis.host=localhost
port=6379


# -------------------------
# JWT configuration
# -------------------------
# IMPORTANT: put a strong Base64-encoded 256-bit secret in the environment variable JWT_SECRET for production.
# Example (generate locally): openssl rand -base64 32
jwt.base64-secret=orLX9HACYfh8x1KwqZwuDBLgk5Uvb8K4yie7nAf/44g=
jwt.access-token-validity-minutes=15
jwt.refresh-token-validity-days=30

# -------------------------
# Logging
# -------------------------
logging.level.org.springframework.security=INFO
logging.level.com.example=DEBUG

# -------------------------
# Optional: tune Boot startup / debug
# -------------------------
#spring.main.allow-bean-definition-overriding=false
#logging.level.org.springframework=INFO
#logging.level.org.hibernate.SQL=DEBUG

# Eureka client configuration
eureka.client.enabled=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
